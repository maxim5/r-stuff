plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, title = "My Plot")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplot(mpg ~ cyl, data=mtcars)
hist(mtcars$mpg)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
foo(1)
source('~/.active-rstudio-document', echo=TRUE)
f1(1:2, 1:2)
f1(1:2)
?outer
source('~/.active-rstudio-document', echo=TRUE)
f1(1:2)
source('~/.active-rstudio-document', echo=TRUE)
f1(1:2)
f1(1:3)
source('~/.active-rstudio-document', echo=TRUE)
f2(1:3)
source('~/.active-rstudio-document', echo=TRUE)
f3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
f3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
rep(1, 5)
f3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
f3(1, 5)
tmpFn3 <- function(x, n)
{
1 + sum((x^(1:n))/(1:n))
}
tmpFn3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tmpFn3(1, 5)
f3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
f3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f3(1, 5)
tmpFn3(1, 5)
source('~/.active-rstudio-document', echo=TRUE)
f(1:3)
source('~/.active-rstudio-document', echo=TRUE)
f(1:3)
f(c(1:5,6:1))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f(0:4)
?ifelse
source('~/.active-rstudio-document', echo=TRUE)
f(0:4)
x = seq(-3, 3, by = 0.1)
plot(x, f(x))
plot(x, f(x), type="l")
a = matrix(1:4, 2, 2)
a
a %%2 == 0
a[a %% 2 == 0]
2 * a[a %% 2 == 0]
a[a %% 2 == 1] = 2 * a[a %% 2 == 1]
a
source('~/.active-rstudio-document', echo=TRUE)
doub(a)
n = 5
k = 2
m = matrix(rep(0, n^n), n, n)
m
m[abs(row(m)-col(m)) == 1]
m[abs(row(m)-col(m)) == 1] = 1
m
m[row(m) == col(m)]
m[row(m) == col(m)] = k
m
source('~/.active-rstudio-document', echo=TRUE)
pretty(5, 3)
150 %% 90
60 %/% 90
120 %/% 90
source('~/.active-rstudio-document', echo=TRUE)
quadrant(90)
quadrant(89)
quadrant(0)
quadrant(180)
quadrant(179)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
weekday(21, 7, 1963)
weekday(rep(21, 2), rep(7, 2), rep(1963, 2))
source('~/.active-rstudio-document', echo=TRUE)
weekday(rep(21, 2), rep(7, 2), rep(1963, 2))
source('~/.active-rstudio-document', echo=TRUE)
weekday0(21, 7, 1963)
source('~/.active-rstudio-document', echo=TRUE)
testLoop(3)
source('~/.active-rstudio-document', echo=TRUE)
testLoop(3)
testLoop(2)
testLoop(4)
source('~/.active-rstudio-document', echo=TRUE)
testLoop(4)
testLoop(3)
testLoop(5)
source('~/.active-rstudio-document', echo=TRUE)
testLoop2(1:4)
1:0
seq(along=0)
seq(along=c())
source('~/.active-rstudio-document', echo=TRUE)
testLoop2(1:4)
testLoop2(c())
source('~/.active-rstudio-document', echo=TRUE)
quadmap(0.1, 2, 100)
quadmap(0.2, 2, 100)
quadmap(0.8, 2, 100)
quadmap(0.8, 2, 10)
tmp = quadmap(0.95, 2.99, 500)
plot(tmp, type = "l")
source('~/.active-rstudio-document', echo=TRUE)
tmp = quadmap(0.95, 2.99, 500)
plot(tmp, type = "l")
source('~/.active-rstudio-document', echo=TRUE)
quad2(0.95, 2.99)
source('~/.active-rstudio-document', echo=TRUE)
quad2(0.95, 2.99)
?sapply
source('~/.active-rstudio-document', echo=TRUE)
autocorr(1:5, 2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
autocorr(1:5, 2)
source('~/.active-rstudio-document', echo=TRUE)
autocorr2(1:5)
tmpAcf <- function(xVec)
{
xc <- xVec - mean(xVec)
denom <- sum(xc^2)
n <- length(x)
r1 <- sum( xc[2:n] * xc[1:(n-1)] )/denom
r2 <- sum( xc[3:n] * xc[1:(n-2)] )/denom
list(r1 = r1, r2 = r2)
}
tmpAcf(1:5)
autocorr2(1:5)
tmpAcf(1:3)
source('~/.active-rstudio-document', echo=TRUE)
tmpAcf(1:5)
source('~/.active-rstudio-document', echo=TRUE)
tmpAcf(1:5)
source('~/.active-rstudio-document', echo=TRUE)
tmpAcf(1:5)
source('~/.active-rstudio-document', echo=TRUE)
tmpAcf(1:5)
autocorr2(1:5)
source('~/.active-rstudio-document', echo=TRUE)
autocorr2(1:5)
source('~/.active-rstudio-document', echo=TRUE)
tmpAcf(1:5)
rm(list=ls())
source('~/R/src/temp4.R', echo=TRUE)
?outer
x = 1:5
y = 2:6
outer(x, y, "<")
outer(x, y, ">")
m = outer(x, y, ">")
rowSums(m)
colSums(outer(y, x, "<"))
source('~/R/src/temp4.R', echo=TRUE)
?sapply
sapply(x, 1, function(a) {sum(y > a)})
sapply(x, function(a) {sum(y > a)})
y > 2
sum(y > 2)
sum(y < 2)
sapply(x, function(a) {sum(y < a)})
x = c(2, 5, 7, 3, 3, 6)
y = c(1, 7, 4, 4, 5, 0)
source('~/R/src/temp4.R', echo=TRUE)
f1a(x, y)
f1b(x, y)
sapply(x, function(a) {y < a})
colSums(sapply(x, function(a) {y < a}))
vapply(x, function(a) {sum(y < a)})
source('~/R/src/temp4.R', echo=TRUE)
f1c(x, y)
x = 1:10000
y = 2:20000
system.time(f1a(x, y))
system.time(f1b(x, y))
system.time(f1b_2(x, y))
system.time(f1c(x, y))
f1a(x, y)
source('~/R/src/temp4.R', echo=TRUE)
source('~/R/src/temp4.R', echo=TRUE)
f1_check
f1_check()
source('~/R/src/temp4.R', echo=TRUE)
f1_check()
source('~/R/src/temp4.R', echo=TRUE)
f1_check()
rm(list=ls())
m = matrix(1:9, 3, 3)
m
m[2,2]
m[2,2] = NA
m[c(2, 2)] = NA
m
m[c(2, 3)] = NA
m
m[2, 3] = NA
m
m[c(1, 2)]
m[ , !apply(is.na(m), 2, any), drop = F]
m[2, 3] = 1
m
m[ , !apply(is.na(m), 2, any), drop = F]
m[ , !apply(is.na(m), 2, any)]
m[ ,!apply(is.na(m), 2, any)]
n = matrix(1:9, 3, 3)
n[ ,!apply(is.na(n), 2, any)]
n[ ,!apply(is.na(n), 2, any), drop = F]
is.na(m)
source('~/R/src/temp4.R', echo=TRUE)
d2b(n)
f2b(n)
f2b(m)
m
rank(c(5, 3, 7, 2, 1, 0, 2, 1, 3))
rank(c(5, 3, 7, 2, 1, 0, 2, 1, 3), ties.method = )
?rank
rank(c(5, 3, 7, 2, 1, 0, 2, 1, 3), ties.method = "first")
source('~/R/src/temp4.R', echo=TRUE)
empCopula(0.5, 0.6, c(4, 5, 2, 1), 4:1)
a = 1:10
sapply(1:10, function(i) a[i] <= 5)
b = 2:11
(a <= 5) & (b <= 5)
(a <= 5) | (b <= 5)
(a <= c) & (b <= c)
c = c(5, 6, 7)
(a <= c) & (b <= c)
empCopula(rep(0.5, 2), rep(0.6, 2), c(4, 5, 2, 1), 4:1)
source('~/R/src/temp4.R', echo=TRUE)
empCopula2(rep(0.5, 2), rep(0.6, 2), c(4, 5, 2, 1), 4:1)
source('~/R/src/temp4.R', echo=TRUE)
empCopula2(rep(0.5, 2), rep(0.6, 2), c(4, 5, 2, 1), 4:1)
empCopula2(c(0.5, 0.2), c(0.6, 0.8), c(4, 5, 2, 1), 4:1)
source('~/.active-rstudio-document', echo=TRUE)
f4a(3)
source('~/R/src/temp4.R', echo=TRUE)
?col
source('~/R/src/temp4.R', echo=TRUE)
source('~/R/src/temp4.R', echo=TRUE)
f4_check
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
funB <- function (n)
{
mat <- matrix(0, ncol=n, nrow=n)
sum( (col(mat)^2)/(10+4*row(mat)^3)*(col(mat)<=row(mat))
)
}
funB(2)
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
?outer
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
?sum
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
source('~/R/src/temp4.R', echo=TRUE)
f4_time(10)
f4_time(100)
f4_time(1000)
source('~/R/src/temp4.R', echo=TRUE)
f4_time(1000)
source('~/R/src/temp4.R', echo=TRUE)
f4_check()
f4_time(1000)
rm(list=ls())
?rexp
rexp(10, 2)
source('~/R/src/temp4.R', echo=TRUE)
f5a(20, 2, 2)
source('~/R/src/temp4.R', echo=TRUE)
f5a(20, 2, 2)
?replicate
source('~/R/src/temp4.R', echo=TRUE)
f5b(20, 2, 2)
source('~/R/src/temp4.R', echo=TRUE)
f5c(10, 20, 2, 2)
?pmax
source('~/R/src/temp4.R', echo=TRUE)
f5c(10, 20, 2, 2)
source('~/R/src/temp4.R', echo=TRUE)
f5c(10, 20, 2, 2)
?cumprod
cumsum
cumsum(1:3)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_a(10)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_a(10)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_a(10)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_b(10)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_b(10)
source('~/R/src/temp4.R', echo=TRUE)
rwalk_c1(10, 10)
rwalk_c2(10, 10)
rwalk_c2(1000, 10)
rwalk_c1(1000, 10)
system.time(rwalk_c1(1000, 10))
system.time(rwalk_c2(1000, 10))
system.time(rwalk_c1(1000, 100))
system.time(rwalk_c2(1000, 100))
system.time(rwalk_c1(5000, 100))
system.time(rwalk_c2(5000, 100))
rm(list=ls())
x1 = 1:5
x2 = 2:6
(x1 - x2)^2 %>% sum()
install.packages("magrittr")
(x1 - x2)^2 %>% sum()
library(magrittr)
(x1 - x2)^2 %>% sum()
source('~/R/src/temp5.R', echo=TRUE)
f1a(1:10)
source('~/R/src/temp5.R', echo=TRUE)
source('~/R/src/temp5.R', echo=TRUE)
f1a(1:10)
f1a(1:10)
source('~/R/src/temp5.R', echo=TRUE)
f1a(1:10)
source('~/R/src/temp5.R', echo=TRUE)
f1a(1:10)
source('~/R/src/temp5.R', echo=TRUE)
ts = ts(1:10000)
head(f1a(ts))
head(f1b(ts))
source('~/R/src/temp5.R', echo=TRUE)
head(f1b(ts))
system.time(f1a(ts))
system.time(f1b(ts))
system.time(f1a(ts))
system.time(f1b(ts))
sum(2:4 > 3)
sum(2:4 > 2)
sum(2:4 > 1:3)
sum(2:4 > c(2, 4, 4))
2:4 > c(2, 4, 4)
2:4 > c(2, 4, 3)
sum(2:4 > c(2, 4, 3))
source('~/R/src/temp5.R', echo=TRUE)
f2a(4)
lapply(rep(10, 4), f2a)
sapply(rep(10, 4), f2a)
lapply(rep(10, 4), f2a)
sapply(rep(10, 4), f2a)
sapply(rep(10, 4), f2a)
myList = lapply(rep(10, 1000), f2a)
lapply(rep(1, 2), f2a)
myList = lapply(rep(10, 7), f2a)
myList[1,]
myList[1]
myList[[1]][1]
myList[[1]]
myList[[1]][1]
myList[[1]][2]
myList
rep(1, 2)
source('~/R/src/temp5.R', echo=TRUE)
source('~/R/src/temp5.R', echo=TRUE)
allX
dim(allX)
dim(allY)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/src/temp5.R', echo=TRUE)
myListCopy
?filter
filter(myList, count > 2)
subset(myList, count > 2)
subset(myList, myList$count > 2)
subset(myList, myList$count > 1)
source('~/R/src/temp5.R', echo=TRUE)
moreThan2
source('~/R/src/temp5.R', echo=TRUE)
moreThan2
source('~/.active-rstudio-document', echo=TRUE)
head(myList)
?t
sapply(myList, function(x) x$xVec - x$yVec)
rm(list=ls()
rm(list=ls())
rm(list=ls())
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
trellis.par.set()
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(rJava)
library(xlsx)
getwd()
setwd("R/src/getdata-013")
dir()
dat = read.xlsx("1.xlsx", rowIndex = 18:23, colIndex = 7:15)
dat = read.xlsx("1.xlsx", rowIndex = 18:23, colIndex = 7:15, sheetIndex = 1)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "1.xml", method="curl")
library(XML)
doc = xmlTreeParse("1.xml", useInternalNodes = TRUE)
doc
root = xmlRoot(doc)
names(root)
root[[1]]
root[[1]][[1]]
install.packages(c("jpeg","jsonlite","data.table","httr"))
# //node[@attr="value"]
xmlValue
xpathSApply(root, "//name", xmlValue)
root[[1]][[1]]
xpathSApply(root, "//zipcode", xmlValue)
# //node[@attr="value"]
xpathSApply(root, "//zipcode", xmlValue)
zipcodes = xpathSApply(root, "//zipcode", xmlValue)
zipcodes == 21231
sum(zipcodes == 21231)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "2.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "2.csv", method="curl")
?fread
??fread
install("data.table")
installed.packages(data.table)
installed.packages("data.table")
?fread
data.table
install.packages("data.table")
library(data.table)
?fread
DT = fread("2.csv")
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
csv = read.csv("1.csv")
csv$VAL == 24
val = csv$VAL[complete.cases(csv$VAL)]
val
sum(val == 24)
source('~/p/stats/r-stuff/getdata-013/quiz1.R', echo=TRUE)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
rm(list=ls())
